/*
 * generated by Xtext 2.12.0
 */
package de.fhg.aisec.lucon.ui.contentassist

import org.eclipse.emf.ecore.EObject
import org.eclipse.jface.viewers.StyledString
import org.eclipse.ui.ISharedImages
import org.eclipse.ui.PlatformUI
import org.eclipse.xtext.Assignment
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor

/**
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#content-assist
 * on how to customize the content assistant.
 */
class LucondslProposalProvider extends AbstractLucondslProposalProvider {
	
	override void completeFlowRule_ReceivesLabels(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// call implementation of superclass
		super.completeFlowRule_ReceivesLabels(model, assignment, context, acceptor)
		
		val labelImg = PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_TOOL_NEW_WIZARD).createImage()
		val purposeImg = PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(ISharedImages.IMG_OBJ_FOLDER).createImage()
		
		// compute the plain language proposals
		acceptor.accept(createCompletionProposal("label(pii)", new StyledString("Personal Identifiable Information"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(email_address)", new StyledString("Email Address"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(date_of_birth)", new StyledString("Date of Birth"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(phone_number)", new StyledString("Phone Number"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(name)", new StyledString("Name"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(bank_account_number)", new StyledString("Bank Account Number"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(credit_card_number)", new StyledString("Credit Card Number"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(passport_number)", new StyledString("Passport Number"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(vehicle_license_plate)", new StyledString("Vehicle License Plate"), labelImg, context))
		acceptor.accept(createCompletionProposal("label(id_card_number)", new StyledString("ID Card Number"), labelImg, context))
		acceptor.accept(createCompletionProposal("purpose(marketing)", new StyledString("Marketing & Advertisement"), purposeImg, context))
		acceptor.accept(createCompletionProposal("purpose(accounting)", new StyledString("Accounting"), purposeImg, context))
		acceptor.accept(createCompletionProposal("purpose(authorization)", new StyledString("Authorization"), purposeImg, context))
		acceptor.accept(createCompletionProposal("purpose(techsupport)", new StyledString("Technical Support"), purposeImg, context))
	}
}
